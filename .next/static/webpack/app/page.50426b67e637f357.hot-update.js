"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/shared/ui/prisma-background/index.tsx":
/*!***************************************************!*\
  !*** ./src/shared/ui/prisma-background/index.tsx ***!
  \***************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Prism: () => (/* binding */ Prism)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var ogl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ogl */ \"(app-pages-browser)/./node_modules/ogl/src/core/Renderer.js\");\n/* harmony import */ var ogl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ogl */ \"(app-pages-browser)/./node_modules/ogl/src/extras/Triangle.js\");\n/* harmony import */ var ogl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ogl */ \"(app-pages-browser)/./node_modules/ogl/src/core/Program.js\");\n/* harmony import */ var ogl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ogl */ \"(app-pages-browser)/./node_modules/ogl/src/core/Mesh.js\");\n\nvar _s = $RefreshSig$();\n\n\nconst Prism = (param)=>{\n    let { glow = 1, bloom = 3222, noise = 0.1, scale = 3.6, height = 3.5, hueShift = 0, inertia = 0.05, baseWidth = 5.5, timeScale = 0.5, hoverStrength = 2, transparent = true, colorFrequency = 1, offset = {\n        x: 0,\n        y: 0\n    }, animationType = \"rotate\", suspendWhenOffscreen = false } = param;\n    _s();\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Prism.useEffect\": ()=>{\n            const container = containerRef.current;\n            if (!container) return;\n            const H = Math.max(0.001, height);\n            const BW = Math.max(0.001, baseWidth);\n            const BASE_HALF = BW * 0.5;\n            const GLOW = Math.max(0.0, glow);\n            const NOISE = Math.max(0.0, noise);\n            var _offset_x;\n            const offX = (_offset_x = offset === null || offset === void 0 ? void 0 : offset.x) !== null && _offset_x !== void 0 ? _offset_x : 0;\n            var _offset_y;\n            const offY = (_offset_y = offset === null || offset === void 0 ? void 0 : offset.y) !== null && _offset_y !== void 0 ? _offset_y : 0;\n            const SAT = transparent ? 1.5 : 1;\n            const SCALE = Math.max(0.001, scale);\n            const HUE = hueShift || 0;\n            const CFREQ = Math.max(0.0, colorFrequency || 1);\n            const BLOOM = Math.max(0.0, bloom || 1);\n            const RSX = 1;\n            const RSY = 1;\n            const RSZ = 1;\n            const TS = Math.max(0, timeScale || 1);\n            const HOVSTR = Math.max(0, hoverStrength || 1);\n            const INERT = Math.max(0, Math.min(1, inertia || 0.12));\n            const dpr = Math.min(2, window.devicePixelRatio || 1);\n            const renderer = new ogl__WEBPACK_IMPORTED_MODULE_2__.Renderer({\n                dpr,\n                alpha: transparent,\n                antialias: false\n            });\n            const gl = renderer.gl;\n            gl.disable(gl.DEPTH_TEST);\n            gl.disable(gl.CULL_FACE);\n            gl.disable(gl.BLEND);\n            Object.assign(gl.canvas.style, {\n                position: \"absolute\",\n                inset: \"0\",\n                width: \"100%\",\n                height: \"100%\",\n                display: \"block\"\n            });\n            container.appendChild(gl.canvas);\n            const vertex = \"\\n      attribute vec2 position;\\n      void main() {\\n        gl_Position = vec4(position, 0.0, 1.0);\\n      }\\n    \";\n            const fragment = \"\\n      precision highp float;\\n\\n      uniform vec2  iResolution;\\n      uniform float iTime;\\n\\n      uniform float uHeight;\\n      uniform float uBaseHalf;\\n      uniform mat3  uRot;\\n      uniform int   uUseBaseWobble;\\n      uniform float uGlow;\\n      uniform vec2  uOffsetPx;\\n      uniform float uNoise;\\n      uniform float uSaturation;\\n      uniform float uScale;\\n      uniform float uHueShift;\\n      uniform float uColorFreq;\\n      uniform float uBloom;\\n      uniform float uCenterShift;\\n      uniform float uInvBaseHalf;\\n      uniform float uInvHeight;\\n      uniform float uMinAxis;\\n      uniform float uPxScale;\\n      uniform float uTimeScale;\\n\\n      vec4 tanh4(vec4 x){\\n        vec4 e2x = exp(2.0*x);\\n        return (e2x - 1.0) / (e2x + 1.0);\\n      }\\n\\n      float rand(vec2 co){\\n        return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453123);\\n      }\\n\\n      float sdOctaAnisoInv(vec3 p){\\n        vec3 q = vec3(abs(p.x) * uInvBaseHalf, abs(p.y) * uInvHeight, abs(p.z) * uInvBaseHalf);\\n        float m = q.x + q.y + q.z - 1.0;\\n        return m * uMinAxis * 0.5773502691896258;\\n      }\\n\\n      float sdPyramidUpInv(vec3 p){\\n        float oct = sdOctaAnisoInv(p);\\n        float halfSpace = -p.y;\\n        return max(oct, halfSpace);\\n      }\\n\\n      mat3 hueRotation(float a){\\n        float c = cos(a), s = sin(a);\\n        mat3 W = mat3(\\n          0.299, 0.587, 0.114,\\n          0.299, 0.587, 0.114,\\n          0.299, 0.587, 0.114\\n        );\\n        mat3 U = mat3(\\n           0.701, -0.587, -0.114,\\n          -0.299,  0.413, -0.114,\\n          -0.300, -0.588,  0.886\\n        );\\n        mat3 V = mat3(\\n           0.168, -0.331,  0.500,\\n           0.328,  0.035, -0.500,\\n          -0.497,  0.296,  0.201\\n        );\\n        return W + U * c + V * s;\\n      }\\n\\n      void main(){\\n        vec2 f = (gl_FragCoord.xy - 0.5 * iResolution.xy - uOffsetPx) * uPxScale;\\n\\n        float z = 5.0;\\n        float d = 0.0;\\n\\n        vec3 p;\\n        vec4 o = vec4(0.0);\\n\\n        float centerShift = uCenterShift;\\n        float cf = uColorFreq;\\n\\n        mat2 wob = mat2(1.0);\\n        if (uUseBaseWobble == 1) {\\n          float t = iTime * uTimeScale;\\n          float c0 = cos(t + 0.0);\\n          float c1 = cos(t + 33.0);\\n          float c2 = cos(t + 11.0);\\n          wob = mat2(c0, c1, c2, c0);\\n        }\\n\\n        const int STEPS = 100;\\n        for (int i = 0; i < STEPS; i++) {\\n          p = vec3(f, z);\\n          p.xz = p.xz * wob;\\n          p = uRot * p;\\n          vec3 q = p;\\n          q.y += centerShift;\\n          d = 0.1 + 0.2 * abs(sdPyramidUpInv(q));\\n          z -= d;\\n          o += (sin((p.y + z) * cf + vec4(0.0, 1.0, 2.0, 3.0)) + 1.0) / d;\\n        }\\n\\n        o = tanh4(o * o * (uGlow * uBloom) / 1e5);\\n\\n        vec3 col = o.rgb;\\n        float n = rand(gl_FragCoord.xy + vec2(iTime));\\n        col += (n - 0.5) * uNoise;\\n        col = clamp(col, 0.0, 1.0);\\n\\n        float L = dot(col, vec3(0.2126, 0.7152, 0.0722));\\n        col = clamp(mix(vec3(L), col, uSaturation), 0.0, 1.0);\\n\\n        if(abs(uHueShift) > 0.0001){\\n          col = clamp(hueRotation(uHueShift) * col, 0.0, 1.0);\\n        }\\n\\n        gl_FragColor = vec4(col, o.a);\\n      }\\n    \";\n            const geometry = new ogl__WEBPACK_IMPORTED_MODULE_3__.Triangle(gl);\n            const iResBuf = new Float32Array(2);\n            const offsetPxBuf = new Float32Array(2);\n            const program = new ogl__WEBPACK_IMPORTED_MODULE_4__.Program(gl, {\n                vertex,\n                fragment,\n                uniforms: {\n                    iResolution: {\n                        value: iResBuf\n                    },\n                    iTime: {\n                        value: 0\n                    },\n                    uHeight: {\n                        value: H\n                    },\n                    uBaseHalf: {\n                        value: BASE_HALF\n                    },\n                    uUseBaseWobble: {\n                        value: 1\n                    },\n                    uRot: {\n                        value: new Float32Array([\n                            1,\n                            0,\n                            0,\n                            0,\n                            1,\n                            0,\n                            0,\n                            0,\n                            1\n                        ])\n                    },\n                    uGlow: {\n                        value: GLOW\n                    },\n                    uOffsetPx: {\n                        value: offsetPxBuf\n                    },\n                    uNoise: {\n                        value: NOISE\n                    },\n                    uSaturation: {\n                        value: SAT\n                    },\n                    uScale: {\n                        value: SCALE\n                    },\n                    uHueShift: {\n                        value: HUE\n                    },\n                    uColorFreq: {\n                        value: CFREQ\n                    },\n                    uBloom: {\n                        value: BLOOM\n                    },\n                    uCenterShift: {\n                        value: H * 0.25\n                    },\n                    uInvBaseHalf: {\n                        value: 1 / BASE_HALF\n                    },\n                    uInvHeight: {\n                        value: 1 / H\n                    },\n                    uMinAxis: {\n                        value: Math.min(BASE_HALF, H)\n                    },\n                    uPxScale: {\n                        value: 1 / ((gl.drawingBufferHeight || 1) * 0.1 * SCALE)\n                    },\n                    uTimeScale: {\n                        value: TS\n                    }\n                }\n            });\n            const mesh = new ogl__WEBPACK_IMPORTED_MODULE_5__.Mesh(gl, {\n                geometry,\n                program\n            });\n            const resize = {\n                \"Prism.useEffect.resize\": ()=>{\n                    const w = container.clientWidth || 1;\n                    const h = container.clientHeight || 1;\n                    renderer.setSize(w, h);\n                    iResBuf[0] = gl.drawingBufferWidth;\n                    iResBuf[1] = gl.drawingBufferHeight;\n                    offsetPxBuf[0] = offX * dpr;\n                    offsetPxBuf[1] = offY * dpr;\n                    program.uniforms.uPxScale.value = 1 / ((gl.drawingBufferHeight || 1) * 0.1 * SCALE);\n                }\n            }[\"Prism.useEffect.resize\"];\n            const ro = new ResizeObserver(resize);\n            ro.observe(container);\n            resize();\n            const rotBuf = new Float32Array(9);\n            const setMat3FromEuler = {\n                \"Prism.useEffect.setMat3FromEuler\": (yawY, pitchX, rollZ, out)=>{\n                    const cy = Math.cos(yawY), sy = Math.sin(yawY);\n                    const cx = Math.cos(pitchX), sx = Math.sin(pitchX);\n                    const cz = Math.cos(rollZ), sz = Math.sin(rollZ);\n                    const r00 = cy * cz + sy * sx * sz;\n                    const r01 = -cy * sz + sy * sx * cz;\n                    const r02 = sy * cx;\n                    const r10 = cx * sz;\n                    const r11 = cx * cz;\n                    const r12 = -sx;\n                    const r20 = -sy * cz + cy * sx * sz;\n                    const r21 = sy * sz + cy * sx * cz;\n                    const r22 = cy * cx;\n                    out[0] = r00;\n                    out[1] = r10;\n                    out[2] = r20;\n                    out[3] = r01;\n                    out[4] = r11;\n                    out[5] = r21;\n                    out[6] = r02;\n                    out[7] = r12;\n                    out[8] = r22;\n                    return out;\n                }\n            }[\"Prism.useEffect.setMat3FromEuler\"];\n            const NOISE_IS_ZERO = NOISE < 1e-6;\n            let raf = 0;\n            const t0 = performance.now();\n            const startRAF = {\n                \"Prism.useEffect.startRAF\": ()=>{\n                    if (raf) return;\n                    raf = requestAnimationFrame(render);\n                }\n            }[\"Prism.useEffect.startRAF\"];\n            const stopRAF = {\n                \"Prism.useEffect.stopRAF\": ()=>{\n                    if (!raf) return;\n                    cancelAnimationFrame(raf);\n                    raf = 0;\n                }\n            }[\"Prism.useEffect.stopRAF\"];\n            const rnd = {\n                \"Prism.useEffect.rnd\": ()=>Math.random()\n            }[\"Prism.useEffect.rnd\"];\n            const wX = (0.3 + rnd() * 0.6) * RSX;\n            const wY = (0.2 + rnd() * 0.7) * RSY;\n            const wZ = (0.1 + rnd() * 0.5) * RSZ;\n            const phX = rnd() * Math.PI * 2;\n            const phZ = rnd() * Math.PI * 2;\n            let yaw = 0, pitch = 0, roll = 0;\n            let targetYaw = 0, targetPitch = 0;\n            const lerp = {\n                \"Prism.useEffect.lerp\": (a, b, t)=>a + (b - a) * t\n            }[\"Prism.useEffect.lerp\"];\n            const pointer = {\n                x: 0,\n                y: 0,\n                inside: true\n            };\n            const onMove = {\n                \"Prism.useEffect.onMove\": (e)=>{\n                    const ww = Math.max(1, window.innerWidth);\n                    const wh = Math.max(1, window.innerHeight);\n                    const cx = ww * 0.5;\n                    const cy = wh * 0.5;\n                    const nx = (e.clientX - cx) / (ww * 0.5);\n                    const ny = (e.clientY - cy) / (wh * 0.5);\n                    pointer.x = Math.max(-1, Math.min(1, nx));\n                    pointer.y = Math.max(-1, Math.min(1, ny));\n                    pointer.inside = true;\n                }\n            }[\"Prism.useEffect.onMove\"];\n            const onLeave = {\n                \"Prism.useEffect.onLeave\": ()=>{\n                    pointer.inside = false;\n                }\n            }[\"Prism.useEffect.onLeave\"];\n            const onBlur = {\n                \"Prism.useEffect.onBlur\": ()=>{\n                    pointer.inside = false;\n                }\n            }[\"Prism.useEffect.onBlur\"];\n            let onPointerMove = null;\n            if (animationType === \"hover\") {\n                onPointerMove = ({\n                    \"Prism.useEffect\": (e)=>{\n                        onMove(e);\n                        startRAF();\n                    }\n                })[\"Prism.useEffect\"];\n                window.addEventListener(\"pointermove\", onPointerMove, {\n                    passive: true\n                });\n                window.addEventListener(\"mouseleave\", onLeave);\n                window.addEventListener(\"blur\", onBlur);\n                program.uniforms.uUseBaseWobble.value = 0;\n            } else if (animationType === \"3drotate\") {\n                program.uniforms.uUseBaseWobble.value = 0;\n            } else {\n                program.uniforms.uUseBaseWobble.value = 1;\n            }\n            const render = {\n                \"Prism.useEffect.render\": (t)=>{\n                    const time = (t - t0) * 0.001;\n                    program.uniforms.iTime.value = time;\n                    let continueRAF = true;\n                    if (animationType === \"hover\") {\n                        const maxPitch = 0.6 * HOVSTR;\n                        const maxYaw = 0.6 * HOVSTR;\n                        targetYaw = (pointer.inside ? -pointer.x : 0) * maxYaw;\n                        targetPitch = (pointer.inside ? pointer.y : 0) * maxPitch;\n                        const prevYaw = yaw;\n                        const prevPitch = pitch;\n                        const prevRoll = roll;\n                        yaw = lerp(prevYaw, targetYaw, INERT);\n                        pitch = lerp(prevPitch, targetPitch, INERT);\n                        roll = lerp(prevRoll, 0, 0.1);\n                        program.uniforms.uRot.value = setMat3FromEuler(yaw, pitch, roll, rotBuf);\n                        if (NOISE_IS_ZERO) {\n                            const settled = Math.abs(yaw - targetYaw) < 1e-4 && Math.abs(pitch - targetPitch) < 1e-4 && Math.abs(roll) < 1e-4;\n                            if (settled) continueRAF = false;\n                        }\n                    } else if (animationType === \"3drotate\") {\n                        const tScaled = time * TS;\n                        yaw = tScaled * wY;\n                        pitch = Math.sin(tScaled * wX + phX) * 0.6;\n                        roll = Math.sin(tScaled * wZ + phZ) * 0.5;\n                        program.uniforms.uRot.value = setMat3FromEuler(yaw, pitch, roll, rotBuf);\n                        if (TS < 1e-6) continueRAF = false;\n                    } else {\n                        rotBuf[0] = 1;\n                        rotBuf[1] = 0;\n                        rotBuf[2] = 0;\n                        rotBuf[3] = 0;\n                        rotBuf[4] = 1;\n                        rotBuf[5] = 0;\n                        rotBuf[6] = 0;\n                        rotBuf[7] = 0;\n                        rotBuf[8] = 1;\n                        program.uniforms.uRot.value = rotBuf;\n                        if (TS < 1e-6) continueRAF = false;\n                    }\n                    renderer.render({\n                        scene: mesh\n                    });\n                    if (continueRAF) {\n                        raf = requestAnimationFrame(render);\n                    } else {\n                        raf = 0;\n                    }\n                }\n            }[\"Prism.useEffect.render\"];\n            if (suspendWhenOffscreen) {\n                const io = new IntersectionObserver({\n                    \"Prism.useEffect\": (entries)=>{\n                        const vis = entries.some({\n                            \"Prism.useEffect.vis\": (e)=>e.isIntersecting\n                        }[\"Prism.useEffect.vis\"]);\n                        if (vis) startRAF();\n                        else stopRAF();\n                    }\n                }[\"Prism.useEffect\"]);\n                io.observe(container);\n                startRAF();\n                container.__prismIO = io;\n            } else {\n                startRAF();\n            }\n            return ({\n                \"Prism.useEffect\": ()=>{\n                    stopRAF();\n                    ro.disconnect();\n                    if (animationType === \"hover\") {\n                        if (onPointerMove) window.removeEventListener(\"pointermove\", onPointerMove);\n                        window.removeEventListener(\"mouseleave\", onLeave);\n                        window.removeEventListener(\"blur\", onBlur);\n                    }\n                    if (suspendWhenOffscreen) {\n                        const io = container.__prismIO;\n                        if (io) io.disconnect();\n                        delete container.__prismIO;\n                    }\n                    if (gl.canvas.parentElement === container) container.removeChild(gl.canvas);\n                }\n            })[\"Prism.useEffect\"];\n        }\n    }[\"Prism.useEffect\"], [\n        glow,\n        noise,\n        scale,\n        bloom,\n        height,\n        inertia,\n        hueShift,\n        baseWidth,\n        offset === null || offset === void 0 ? void 0 : offset.x,\n        offset === null || offset === void 0 ? void 0 : offset.y,\n        timeScale,\n        transparent,\n        animationType,\n        hoverStrength,\n        colorFrequency,\n        suspendWhenOffscreen\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full h-full absolute\",\n        ref: containerRef\n    }, void 0, false, {\n        fileName: \"/Users/cloudmenson/Desktop/Files/Programming/My portfolio website/designer-portfolio/src/shared/ui/prisma-background/index.tsx\",\n        lineNumber: 479,\n        columnNumber: 10\n    }, undefined);\n};\n_s(Prism, \"8puyVO4ts1RhCfXUmci3vLI3Njw=\");\n_c = Prism;\nvar _c;\n$RefreshReg$(_c, \"Prism\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/shared/ui/prisma-background/index.tsx\n"));

/***/ })

});