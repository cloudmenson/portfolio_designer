/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22weight%5C%22%3A%5B%5C%22400%5C%22%2C%5C%22600%5C%22%2C%5C%22700%5C%22%2C%5C%22800%5C%22%2C%5C%22900%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Dancing_Script%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22weight%5C%22%3A%5B%5C%22400%5C%22%2C%5C%22500%5C%22%2C%5C%22600%5C%22%2C%5C%22700%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-dancing%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22dancing%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fsrc%2Fshared%2Fui%2Fclient-only%2Findex.tsx%22%2C%22ids%22%3A%5B%22ClientOnly%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fsrc%2Fshared%2Fui%2Flenis-provider%2Findex.tsx%22%2C%22ids%22%3A%5B%22LenisProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fsrc%2Fshared%2Fui%2Fsplash-cursor%2Findex.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22weight%5C%22%3A%5B%5C%22400%5C%22%2C%5C%22600%5C%22%2C%5C%22700%5C%22%2C%5C%22800%5C%22%2C%5C%22900%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Dancing_Script%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22weight%5C%22%3A%5B%5C%22400%5C%22%2C%5C%22500%5C%22%2C%5C%22600%5C%22%2C%5C%22700%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-dancing%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22dancing%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fsrc%2Fshared%2Fui%2Fclient-only%2Findex.tsx%22%2C%22ids%22%3A%5B%22ClientOnly%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fsrc%2Fshared%2Fui%2Flenis-provider%2Findex.tsx%22%2C%22ids%22%3A%5B%22LenisProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fsrc%2Fshared%2Fui%2Fsplash-cursor%2Findex.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/font/google/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"Inter\",\"arguments\":[{\"subsets\":[\"latin\"],\"weight\":[\"400\",\"600\",\"700\",\"800\",\"900\"],\"variable\":\"--font-inter\"}],\"variableName\":\"inter\"} */ \"(app-pages-browser)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"src/app/layout.tsx\\\",\\\"import\\\":\\\"Inter\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"],\\\"weight\\\":[\\\"400\\\",\\\"600\\\",\\\"700\\\",\\\"800\\\",\\\"900\\\"],\\\"variable\\\":\\\"--font-inter\\\"}],\\\"variableName\\\":\\\"inter\\\"}\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/font/google/target.css?{\"path\":\"src/app/layout.tsx\",\"import\":\"Dancing_Script\",\"arguments\":[{\"subsets\":[\"latin\"],\"weight\":[\"400\",\"500\",\"600\",\"700\"],\"variable\":\"--font-dancing\"}],\"variableName\":\"dancing\"} */ \"(app-pages-browser)/./node_modules/next/font/google/target.css?{\\\"path\\\":\\\"src/app/layout.tsx\\\",\\\"import\\\":\\\"Dancing_Script\\\",\\\"arguments\\\":[{\\\"subsets\\\":[\\\"latin\\\"],\\\"weight\\\":[\\\"400\\\",\\\"500\\\",\\\"600\\\",\\\"700\\\"],\\\"variable\\\":\\\"--font-dancing\\\"}],\\\"variableName\\\":\\\"dancing\\\"}\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/globals.css */ \"(app-pages-browser)/./src/app/globals.css\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/shared/ui/client-only/index.tsx */ \"(app-pages-browser)/./src/shared/ui/client-only/index.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/shared/ui/lenis-provider/index.tsx */ \"(app-pages-browser)/./src/shared/ui/lenis-provider/index.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/shared/ui/splash-cursor/index.tsx */ \"(app-pages-browser)/./src/shared/ui/splash-cursor/index.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZjbG91ZG1lbnNvbiUyRkRlc2t0b3AlMkZGaWxlcyUyRlByb2dyYW1taW5nJTJGTXklMjBwb3J0Zm9saW8lMjB3ZWJzaXRlJTJGZGVzaWduZXItcG9ydGZvbGlvJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmZvbnQlMkZnb29nbGUlMkZ0YXJnZXQuY3NzJTNGJTdCJTVDJTIycGF0aCU1QyUyMiUzQSU1QyUyMnNyYyUyRmFwcCUyRmxheW91dC50c3glNUMlMjIlMkMlNUMlMjJpbXBvcnQlNUMlMjIlM0ElNUMlMjJJbnRlciU1QyUyMiUyQyU1QyUyMmFyZ3VtZW50cyU1QyUyMiUzQSU1QiU3QiU1QyUyMnN1YnNldHMlNUMlMjIlM0ElNUIlNUMlMjJsYXRpbiU1QyUyMiU1RCUyQyU1QyUyMndlaWdodCU1QyUyMiUzQSU1QiU1QyUyMjQwMCU1QyUyMiUyQyU1QyUyMjYwMCU1QyUyMiUyQyU1QyUyMjcwMCU1QyUyMiUyQyU1QyUyMjgwMCU1QyUyMiUyQyU1QyUyMjkwMCU1QyUyMiU1RCUyQyU1QyUyMnZhcmlhYmxlJTVDJTIyJTNBJTVDJTIyLS1mb250LWludGVyJTVDJTIyJTdEJTVEJTJDJTVDJTIydmFyaWFibGVOYW1lJTVDJTIyJTNBJTVDJTIyaW50ZXIlNUMlMjIlN0QlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZjbG91ZG1lbnNvbiUyRkRlc2t0b3AlMkZGaWxlcyUyRlByb2dyYW1taW5nJTJGTXklMjBwb3J0Zm9saW8lMjB3ZWJzaXRlJTJGZGVzaWduZXItcG9ydGZvbGlvJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmZvbnQlMkZnb29nbGUlMkZ0YXJnZXQuY3NzJTNGJTdCJTVDJTIycGF0aCU1QyUyMiUzQSU1QyUyMnNyYyUyRmFwcCUyRmxheW91dC50c3glNUMlMjIlMkMlNUMlMjJpbXBvcnQlNUMlMjIlM0ElNUMlMjJEYW5jaW5nX1NjcmlwdCU1QyUyMiUyQyU1QyUyMmFyZ3VtZW50cyU1QyUyMiUzQSU1QiU3QiU1QyUyMnN1YnNldHMlNUMlMjIlM0ElNUIlNUMlMjJsYXRpbiU1QyUyMiU1RCUyQyU1QyUyMndlaWdodCU1QyUyMiUzQSU1QiU1QyUyMjQwMCU1QyUyMiUyQyU1QyUyMjUwMCU1QyUyMiUyQyU1QyUyMjYwMCU1QyUyMiUyQyU1QyUyMjcwMCU1QyUyMiU1RCUyQyU1QyUyMnZhcmlhYmxlJTVDJTIyJTNBJTVDJTIyLS1mb250LWRhbmNpbmclNUMlMjIlN0QlNUQlMkMlNUMlMjJ2YXJpYWJsZU5hbWUlNUMlMjIlM0ElNUMlMjJkYW5jaW5nJTVDJTIyJTdEJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGY2xvdWRtZW5zb24lMkZEZXNrdG9wJTJGRmlsZXMlMkZQcm9ncmFtbWluZyUyRk15JTIwcG9ydGZvbGlvJTIwd2Vic2l0ZSUyRmRlc2lnbmVyLXBvcnRmb2xpbyUyRnNyYyUyRmFwcCUyRmdsb2JhbHMuY3NzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGY2xvdWRtZW5zb24lMkZEZXNrdG9wJTJGRmlsZXMlMkZQcm9ncmFtbWluZyUyRk15JTIwcG9ydGZvbGlvJTIwd2Vic2l0ZSUyRmRlc2lnbmVyLXBvcnRmb2xpbyUyRnNyYyUyRnNoYXJlZCUyRnVpJTJGY2xpZW50LW9ubHklMkZpbmRleC50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJDbGllbnRPbmx5JTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGY2xvdWRtZW5zb24lMkZEZXNrdG9wJTJGRmlsZXMlMkZQcm9ncmFtbWluZyUyRk15JTIwcG9ydGZvbGlvJTIwd2Vic2l0ZSUyRmRlc2lnbmVyLXBvcnRmb2xpbyUyRnNyYyUyRnNoYXJlZCUyRnVpJTJGbGVuaXMtcHJvdmlkZXIlMkZpbmRleC50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlMjJMZW5pc1Byb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGY2xvdWRtZW5zb24lMkZEZXNrdG9wJTJGRmlsZXMlMkZQcm9ncmFtbWluZyUyRk15JTIwcG9ydGZvbGlvJTIwd2Vic2l0ZSUyRmRlc2lnbmVyLXBvcnRmb2xpbyUyRnNyYyUyRnNoYXJlZCUyRnVpJTJGc3BsYXNoLWN1cnNvciUyRmluZGV4LnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMmRlZmF1bHQlMjIlNUQlN0Qmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSxnbEJBQWlYO0FBQ2pYO0FBQ0EsNGxCQUFzWDtBQUN0WDtBQUNBLG9LQUE2STtBQUM3STtBQUNBLG9NQUE2TDtBQUM3TDtBQUNBLDBNQUFtTTtBQUNuTTtBQUNBLHdNQUE0TCIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2Nsb3VkbWVuc29uL0Rlc2t0b3AvRmlsZXMvUHJvZ3JhbW1pbmcvTXkgcG9ydGZvbGlvIHdlYnNpdGUvZGVzaWduZXItcG9ydGZvbGlvL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvZ29vZ2xlL3RhcmdldC5jc3M/e1xcXCJwYXRoXFxcIjpcXFwic3JjL2FwcC9sYXlvdXQudHN4XFxcIixcXFwiaW1wb3J0XFxcIjpcXFwiSW50ZXJcXFwiLFxcXCJhcmd1bWVudHNcXFwiOlt7XFxcInN1YnNldHNcXFwiOltcXFwibGF0aW5cXFwiXSxcXFwid2VpZ2h0XFxcIjpbXFxcIjQwMFxcXCIsXFxcIjYwMFxcXCIsXFxcIjcwMFxcXCIsXFxcIjgwMFxcXCIsXFxcIjkwMFxcXCJdLFxcXCJ2YXJpYWJsZVxcXCI6XFxcIi0tZm9udC1pbnRlclxcXCJ9XSxcXFwidmFyaWFibGVOYW1lXFxcIjpcXFwiaW50ZXJcXFwifVwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL2Nsb3VkbWVuc29uL0Rlc2t0b3AvRmlsZXMvUHJvZ3JhbW1pbmcvTXkgcG9ydGZvbGlvIHdlYnNpdGUvZGVzaWduZXItcG9ydGZvbGlvL25vZGVfbW9kdWxlcy9uZXh0L2ZvbnQvZ29vZ2xlL3RhcmdldC5jc3M/e1xcXCJwYXRoXFxcIjpcXFwic3JjL2FwcC9sYXlvdXQudHN4XFxcIixcXFwiaW1wb3J0XFxcIjpcXFwiRGFuY2luZ19TY3JpcHRcXFwiLFxcXCJhcmd1bWVudHNcXFwiOlt7XFxcInN1YnNldHNcXFwiOltcXFwibGF0aW5cXFwiXSxcXFwid2VpZ2h0XFxcIjpbXFxcIjQwMFxcXCIsXFxcIjUwMFxcXCIsXFxcIjYwMFxcXCIsXFxcIjcwMFxcXCJdLFxcXCJ2YXJpYWJsZVxcXCI6XFxcIi0tZm9udC1kYW5jaW5nXFxcIn1dLFxcXCJ2YXJpYWJsZU5hbWVcXFwiOlxcXCJkYW5jaW5nXFxcIn1cIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9jbG91ZG1lbnNvbi9EZXNrdG9wL0ZpbGVzL1Byb2dyYW1taW5nL015IHBvcnRmb2xpbyB3ZWJzaXRlL2Rlc2lnbmVyLXBvcnRmb2xpby9zcmMvYXBwL2dsb2JhbHMuY3NzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJDbGllbnRPbmx5XCJdICovIFwiL1VzZXJzL2Nsb3VkbWVuc29uL0Rlc2t0b3AvRmlsZXMvUHJvZ3JhbW1pbmcvTXkgcG9ydGZvbGlvIHdlYnNpdGUvZGVzaWduZXItcG9ydGZvbGlvL3NyYy9zaGFyZWQvdWkvY2xpZW50LW9ubHkvaW5kZXgudHN4XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJMZW5pc1Byb3ZpZGVyXCJdICovIFwiL1VzZXJzL2Nsb3VkbWVuc29uL0Rlc2t0b3AvRmlsZXMvUHJvZ3JhbW1pbmcvTXkgcG9ydGZvbGlvIHdlYnNpdGUvZGVzaWduZXItcG9ydGZvbGlvL3NyYy9zaGFyZWQvdWkvbGVuaXMtcHJvdmlkZXIvaW5kZXgudHN4XCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJkZWZhdWx0XCJdICovIFwiL1VzZXJzL2Nsb3VkbWVuc29uL0Rlc2t0b3AvRmlsZXMvUHJvZ3JhbW1pbmcvTXkgcG9ydGZvbGlvIHdlYnNpdGUvZGVzaWduZXItcG9ydGZvbGlvL3NyYy9zaGFyZWQvdWkvc3BsYXNoLWN1cnNvci9pbmRleC50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Inter%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22weight%5C%22%3A%5B%5C%22400%5C%22%2C%5C%22600%5C%22%2C%5C%22700%5C%22%2C%5C%22800%5C%22%2C%5C%22900%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-inter%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22inter%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fnode_modules%2Fnext%2Ffont%2Fgoogle%2Ftarget.css%3F%7B%5C%22path%5C%22%3A%5C%22src%2Fapp%2Flayout.tsx%5C%22%2C%5C%22import%5C%22%3A%5C%22Dancing_Script%5C%22%2C%5C%22arguments%5C%22%3A%5B%7B%5C%22subsets%5C%22%3A%5B%5C%22latin%5C%22%5D%2C%5C%22weight%5C%22%3A%5B%5C%22400%5C%22%2C%5C%22500%5C%22%2C%5C%22600%5C%22%2C%5C%22700%5C%22%5D%2C%5C%22variable%5C%22%3A%5C%22--font-dancing%5C%22%7D%5D%2C%5C%22variableName%5C%22%3A%5C%22dancing%5C%22%7D%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fsrc%2Fapp%2Fglobals.css%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fsrc%2Fshared%2Fui%2Fclient-only%2Findex.tsx%22%2C%22ids%22%3A%5B%22ClientOnly%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fsrc%2Fshared%2Fui%2Flenis-provider%2Findex.tsx%22%2C%22ids%22%3A%5B%22LenisProvider%22%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fcloudmenson%2FDesktop%2FFiles%2FProgramming%2FMy%20portfolio%20website%2Fdesigner-portfolio%2Fsrc%2Fshared%2Fui%2Fsplash-cursor%2Findex.tsx%22%2C%22ids%22%3A%5B%22default%22%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"d3db1f992dc1\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyIvVXNlcnMvY2xvdWRtZW5zb24vRGVza3RvcC9GaWxlcy9Qcm9ncmFtbWluZy9NeSBwb3J0Zm9saW8gd2Vic2l0ZS9kZXNpZ25lci1wb3J0Zm9saW8vc3JjL2FwcC9nbG9iYWxzLmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcImQzZGIxZjk5MmRjMVwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/shared/ui/splash-cursor/index.tsx":
/*!***********************************************!*\
  !*** ./src/shared/ui/splash-cursor/index.tsx ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SplashCursor)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction pointerPrototype() {\n    return {\n        id: -1,\n        texcoordX: 0,\n        texcoordY: 0,\n        prevTexcoordX: 0,\n        prevTexcoordY: 0,\n        deltaX: 0,\n        deltaY: 0,\n        down: false,\n        moved: false,\n        color: {\n            r: 0,\n            g: 0,\n            b: 0\n        }\n    };\n}\nfunction SplashCursor(param) {\n    let { SIM_RESOLUTION = 128, DYE_RESOLUTION = 1440, CAPTURE_RESOLUTION = 512, DENSITY_DISSIPATION = 3.5, VELOCITY_DISSIPATION = 2, PRESSURE = 0.1, PRESSURE_ITERATIONS = 20, CURL = 3, SPLAT_RADIUS = 0.2, SPLAT_FORCE = 6000, SHADING = true, COLOR_UPDATE_SPEED = 10, BACK_COLOR = {\n        r: 0.5,\n        g: 0,\n        b: 0\n    }, TRANSPARENT = true } = param;\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"SplashCursor.useEffect\": ()=>{\n            const canvas = canvasRef.current;\n            if (!canvas) return;\n            let pointers = [\n                pointerPrototype()\n            ];\n            let config = {\n                SIM_RESOLUTION: SIM_RESOLUTION,\n                DYE_RESOLUTION: DYE_RESOLUTION,\n                CAPTURE_RESOLUTION: CAPTURE_RESOLUTION,\n                DENSITY_DISSIPATION: DENSITY_DISSIPATION,\n                VELOCITY_DISSIPATION: VELOCITY_DISSIPATION,\n                PRESSURE: PRESSURE,\n                PRESSURE_ITERATIONS: PRESSURE_ITERATIONS,\n                CURL: CURL,\n                SPLAT_RADIUS: SPLAT_RADIUS,\n                SPLAT_FORCE: SPLAT_FORCE,\n                SHADING,\n                COLOR_UPDATE_SPEED: COLOR_UPDATE_SPEED,\n                PAUSED: false,\n                BACK_COLOR,\n                TRANSPARENT\n            };\n            const { gl, ext } = getWebGLContext(canvas);\n            if (!gl || !ext) return;\n            if (!ext.supportLinearFiltering) {\n                config.DYE_RESOLUTION = 256;\n                config.SHADING = false;\n            }\n            function getWebGLContext(canvas) {\n                const params = {\n                    alpha: true,\n                    depth: false,\n                    stencil: false,\n                    antialias: false,\n                    preserveDrawingBuffer: false\n                };\n                let gl = canvas.getContext(\"webgl2\", params);\n                if (!gl) {\n                    gl = canvas.getContext(\"webgl\", params) || canvas.getContext(\"experimental-webgl\", params);\n                }\n                if (!gl) {\n                    throw new Error(\"Unable to initialize WebGL.\");\n                }\n                const isWebGL2 = \"drawBuffers\" in gl;\n                let supportLinearFiltering = false;\n                let halfFloat = null;\n                if (isWebGL2) {\n                    gl.getExtension(\"EXT_color_buffer_float\");\n                    supportLinearFiltering = !!gl.getExtension(\"OES_texture_float_linear\");\n                } else {\n                    halfFloat = gl.getExtension(\"OES_texture_half_float\");\n                    supportLinearFiltering = !!gl.getExtension(\"OES_texture_half_float_linear\");\n                }\n                gl.clearColor(0, 0, 0, 1);\n                const halfFloatTexType = isWebGL2 ? gl.HALF_FLOAT : halfFloat && halfFloat.HALF_FLOAT_OES || 0;\n                let formatRGBA;\n                let formatRG;\n                let formatR;\n                if (isWebGL2) {\n                    formatRGBA = getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, halfFloatTexType);\n                    formatRG = getSupportedFormat(gl, gl.RG16F, gl.RG, halfFloatTexType);\n                    formatR = getSupportedFormat(gl, gl.R16F, gl.RED, halfFloatTexType);\n                } else {\n                    formatRGBA = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n                    formatRG = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n                    formatR = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType);\n                }\n                return {\n                    gl,\n                    ext: {\n                        formatRGBA,\n                        formatRG,\n                        formatR,\n                        halfFloatTexType,\n                        supportLinearFiltering\n                    }\n                };\n            }\n            function getSupportedFormat(gl, internalFormat, format, type) {\n                if (!supportRenderTextureFormat(gl, internalFormat, format, type)) {\n                    if (\"drawBuffers\" in gl) {\n                        const gl2 = gl;\n                        switch(internalFormat){\n                            case gl2.R16F:\n                                return getSupportedFormat(gl2, gl2.RG16F, gl2.RG, type);\n                            case gl2.RG16F:\n                                return getSupportedFormat(gl2, gl2.RGBA16F, gl2.RGBA, type);\n                            default:\n                                return null;\n                        }\n                    }\n                    return null;\n                }\n                return {\n                    internalFormat,\n                    format\n                };\n            }\n            function supportRenderTextureFormat(gl, internalFormat, format, type) {\n                const texture = gl.createTexture();\n                if (!texture) return false;\n                gl.bindTexture(gl.TEXTURE_2D, texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 4, 4, 0, format, type, null);\n                const fbo = gl.createFramebuffer();\n                if (!fbo) return false;\n                gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n                gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n                const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n                return status === gl.FRAMEBUFFER_COMPLETE;\n            }\n            function hashCode(s) {\n                if (!s.length) return 0;\n                let hash = 0;\n                for(let i = 0; i < s.length; i++){\n                    hash = (hash << 5) - hash + s.charCodeAt(i);\n                    hash |= 0;\n                }\n                return hash;\n            }\n            function addKeywords(source, keywords) {\n                if (!keywords) return source;\n                let keywordsString = \"\";\n                for (const keyword of keywords){\n                    keywordsString += \"#define \".concat(keyword, \"\\n\");\n                }\n                return keywordsString + source;\n            }\n            function compileShader(type, source) {\n                let keywords = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n                const shaderSource = addKeywords(source, keywords);\n                const shader = gl.createShader(type);\n                if (!shader) return null;\n                gl.shaderSource(shader, shaderSource);\n                gl.compileShader(shader);\n                if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n                    console.trace(gl.getShaderInfoLog(shader));\n                }\n                return shader;\n            }\n            function createProgram(vertexShader, fragmentShader) {\n                if (!vertexShader || !fragmentShader) return null;\n                const program = gl.createProgram();\n                if (!program) return null;\n                gl.attachShader(program, vertexShader);\n                gl.attachShader(program, fragmentShader);\n                gl.linkProgram(program);\n                if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n                    console.trace(gl.getProgramInfoLog(program));\n                }\n                return program;\n            }\n            function getUniforms(program) {\n                let uniforms = {};\n                const uniformCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n                for(let i = 0; i < uniformCount; i++){\n                    const uniformInfo = gl.getActiveUniform(program, i);\n                    if (uniformInfo) {\n                        uniforms[uniformInfo.name] = gl.getUniformLocation(program, uniformInfo.name);\n                    }\n                }\n                return uniforms;\n            }\n            class Program {\n                bind() {\n                    if (this.program) gl.useProgram(this.program);\n                }\n                constructor(vertexShader, fragmentShader){\n                    this.program = createProgram(vertexShader, fragmentShader);\n                    this.uniforms = this.program ? getUniforms(this.program) : {};\n                }\n            }\n            class Material {\n                setKeywords(keywords) {\n                    let hash = 0;\n                    for (const kw of keywords){\n                        hash += hashCode(kw);\n                    }\n                    let program = this.programs[hash];\n                    if (program == null) {\n                        const fragmentShader = compileShader(gl.FRAGMENT_SHADER, this.fragmentShaderSource, keywords);\n                        program = createProgram(this.vertexShader, fragmentShader);\n                        this.programs[hash] = program;\n                    }\n                    if (program === this.activeProgram) return;\n                    if (program) {\n                        this.uniforms = getUniforms(program);\n                    }\n                    this.activeProgram = program;\n                }\n                bind() {\n                    if (this.activeProgram) {\n                        gl.useProgram(this.activeProgram);\n                    }\n                }\n                constructor(vertexShader, fragmentShaderSource){\n                    this.vertexShader = vertexShader;\n                    this.fragmentShaderSource = fragmentShaderSource;\n                    this.programs = {};\n                    this.activeProgram = null;\n                    this.uniforms = {};\n                }\n            }\n            const baseVertexShader = compileShader(gl.VERTEX_SHADER, \"\\n      precision highp float;\\n      attribute vec2 aPosition;\\n      varying vec2 vUv;\\n      varying vec2 vL;\\n      varying vec2 vR;\\n      varying vec2 vT;\\n      varying vec2 vB;\\n      uniform vec2 texelSize;\\n\\n      void main () {\\n        vUv = aPosition * 0.5 + 0.5;\\n        vL = vUv - vec2(texelSize.x, 0.0);\\n        vR = vUv + vec2(texelSize.x, 0.0);\\n        vT = vUv + vec2(0.0, texelSize.y);\\n        vB = vUv - vec2(0.0, texelSize.y);\\n        gl_Position = vec4(aPosition, 0.0, 1.0);\\n      }\\n    \");\n            const copyShader = compileShader(gl.FRAGMENT_SHADER, \"\\n      precision mediump float;\\n      precision mediump sampler2D;\\n      varying highp vec2 vUv;\\n      uniform sampler2D uTexture;\\n\\n      void main () {\\n          gl_FragColor = texture2D(uTexture, vUv);\\n      }\\n    \");\n            const clearShader = compileShader(gl.FRAGMENT_SHADER, \"\\n      precision mediump float;\\n      precision mediump sampler2D;\\n      varying highp vec2 vUv;\\n      uniform sampler2D uTexture;\\n      uniform float value;\\n\\n      void main () {\\n          gl_FragColor = value * texture2D(uTexture, vUv);\\n      }\\n    \");\n            const displayShaderSource = \"\\n      precision highp float;\\n      precision highp sampler2D;\\n      varying vec2 vUv;\\n      varying vec2 vL;\\n      varying vec2 vR;\\n      varying vec2 vT;\\n      varying vec2 vB;\\n      uniform sampler2D uTexture;\\n      uniform sampler2D uDithering;\\n      uniform vec2 ditherScale;\\n      uniform vec2 texelSize;\\n\\n      vec3 linearToGamma (vec3 color) {\\n          color = max(color, vec3(0));\\n          return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\\n      }\\n\\n      void main () {\\n          vec3 c = texture2D(uTexture, vUv).rgb;\\n          #ifdef SHADING\\n              vec3 lc = texture2D(uTexture, vL).rgb;\\n              vec3 rc = texture2D(uTexture, vR).rgb;\\n              vec3 tc = texture2D(uTexture, vT).rgb;\\n              vec3 bc = texture2D(uTexture, vB).rgb;\\n\\n              float dx = length(rc) - length(lc);\\n              float dy = length(tc) - length(bc);\\n\\n              vec3 n = normalize(vec3(dx, dy, length(texelSize)));\\n              vec3 l = vec3(0.0, 0.0, 1.0);\\n\\n              float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\\n              c *= diffuse;\\n          #endif\\n\\n          float a = max(c.r, max(c.g, c.b));\\n          gl_FragColor = vec4(c, a);\\n      }\\n    \";\n            const splatShader = compileShader(gl.FRAGMENT_SHADER, \"\\n      precision highp float;\\n      precision highp sampler2D;\\n      varying vec2 vUv;\\n      uniform sampler2D uTarget;\\n      uniform float aspectRatio;\\n      uniform vec3 color;\\n      uniform vec2 point;\\n      uniform float radius;\\n\\n      void main () {\\n          vec2 p = vUv - point.xy;\\n          p.x *= aspectRatio;\\n          vec3 splat = exp(-dot(p, p) / radius) * color;\\n          vec3 base = texture2D(uTarget, vUv).xyz;\\n          gl_FragColor = vec4(base + splat, 1.0);\\n      }\\n    \");\n            const advectionShader = compileShader(gl.FRAGMENT_SHADER, \"\\n      precision highp float;\\n      precision highp sampler2D;\\n      varying vec2 vUv;\\n      uniform sampler2D uVelocity;\\n      uniform sampler2D uSource;\\n      uniform vec2 texelSize;\\n      uniform vec2 dyeTexelSize;\\n      uniform float dt;\\n      uniform float dissipation;\\n\\n      vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\\n          vec2 st = uv / tsize - 0.5;\\n          vec2 iuv = floor(st);\\n          vec2 fuv = fract(st);\\n\\n          vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\\n          vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\\n          vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\\n          vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\\n\\n          return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\\n      }\\n\\n      void main () {\\n          #ifdef MANUAL_FILTERING\\n              vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\\n              vec4 result = bilerp(uSource, coord, dyeTexelSize);\\n          #else\\n              vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\\n              vec4 result = texture2D(uSource, coord);\\n          #endif\\n          float decay = 1.0 + dissipation * dt;\\n          gl_FragColor = result / decay;\\n      }\\n    \", ext.supportLinearFiltering ? null : [\n                \"MANUAL_FILTERING\"\n            ]);\n            const divergenceShader = compileShader(gl.FRAGMENT_SHADER, \"\\n      precision mediump float;\\n      precision mediump sampler2D;\\n      varying highp vec2 vUv;\\n      varying highp vec2 vL;\\n      varying highp vec2 vR;\\n      varying highp vec2 vT;\\n      varying highp vec2 vB;\\n      uniform sampler2D uVelocity;\\n\\n      void main () {\\n          float L = texture2D(uVelocity, vL).x;\\n          float R = texture2D(uVelocity, vR).x;\\n          float T = texture2D(uVelocity, vT).y;\\n          float B = texture2D(uVelocity, vB).y;\\n\\n          vec2 C = texture2D(uVelocity, vUv).xy;\\n          if (vL.x < 0.0) { L = -C.x; }\\n          if (vR.x > 1.0) { R = -C.x; }\\n          if (vT.y > 1.0) { T = -C.y; }\\n          if (vB.y < 0.0) { B = -C.y; }\\n\\n          float div = 0.5 * (R - L + T - B);\\n          gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\\n      }\\n    \");\n            const curlShader = compileShader(gl.FRAGMENT_SHADER, \"\\n      precision mediump float;\\n      precision mediump sampler2D;\\n      varying highp vec2 vUv;\\n      varying highp vec2 vL;\\n      varying highp vec2 vR;\\n      varying highp vec2 vT;\\n      varying highp vec2 vB;\\n      uniform sampler2D uVelocity;\\n\\n      void main () {\\n          float L = texture2D(uVelocity, vL).y;\\n          float R = texture2D(uVelocity, vR).y;\\n          float T = texture2D(uVelocity, vT).x;\\n          float B = texture2D(uVelocity, vB).x;\\n          float vorticity = R - L - T + B;\\n          gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\\n      }\\n    \");\n            const vorticityShader = compileShader(gl.FRAGMENT_SHADER, \"\\n      precision highp float;\\n      precision highp sampler2D;\\n      varying vec2 vUv;\\n      varying vec2 vL;\\n      varying vec2 vR;\\n      varying vec2 vT;\\n      varying vec2 vB;\\n      uniform sampler2D uVelocity;\\n      uniform sampler2D uCurl;\\n      uniform float curl;\\n      uniform float dt;\\n\\n      void main () {\\n          float L = texture2D(uCurl, vL).x;\\n          float R = texture2D(uCurl, vR).x;\\n          float T = texture2D(uCurl, vT).x;\\n          float B = texture2D(uCurl, vB).x;\\n          float C = texture2D(uCurl, vUv).x;\\n\\n          vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\\n          force /= length(force) + 0.0001;\\n          force *= curl * C;\\n          force.y *= -1.0;\\n\\n          vec2 velocity = texture2D(uVelocity, vUv).xy;\\n          velocity += force * dt;\\n          velocity = min(max(velocity, -1000.0), 1000.0);\\n          gl_FragColor = vec4(velocity, 0.0, 1.0);\\n      }\\n    \");\n            const pressureShader = compileShader(gl.FRAGMENT_SHADER, \"\\n      precision mediump float;\\n      precision mediump sampler2D;\\n      varying highp vec2 vUv;\\n      varying highp vec2 vL;\\n      varying highp vec2 vR;\\n      varying highp vec2 vT;\\n      varying highp vec2 vB;\\n      uniform sampler2D uPressure;\\n      uniform sampler2D uDivergence;\\n\\n      void main () {\\n          float L = texture2D(uPressure, vL).x;\\n          float R = texture2D(uPressure, vR).x;\\n          float T = texture2D(uPressure, vT).x;\\n          float B = texture2D(uPressure, vB).x;\\n          float C = texture2D(uPressure, vUv).x;\\n          float divergence = texture2D(uDivergence, vUv).x;\\n          float pressure = (L + R + B + T - divergence) * 0.25;\\n          gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\\n      }\\n    \");\n            const gradientSubtractShader = compileShader(gl.FRAGMENT_SHADER, \"\\n      precision mediump float;\\n      precision mediump sampler2D;\\n      varying highp vec2 vUv;\\n      varying highp vec2 vL;\\n      varying highp vec2 vR;\\n      varying highp vec2 vT;\\n      varying highp vec2 vB;\\n      uniform sampler2D uPressure;\\n      uniform sampler2D uVelocity;\\n\\n      void main () {\\n          float L = texture2D(uPressure, vL).x;\\n          float R = texture2D(uPressure, vR).x;\\n          float T = texture2D(uPressure, vT).x;\\n          float B = texture2D(uPressure, vB).x;\\n          vec2 velocity = texture2D(uVelocity, vUv).xy;\\n          velocity.xy -= vec2(R - L, T - B);\\n          gl_FragColor = vec4(velocity, 0.0, 1.0);\\n      }\\n    \");\n            const blit = ({\n                \"SplashCursor.useEffect.blit\": ()=>{\n                    const buffer = gl.createBuffer();\n                    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n                    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n                        -1,\n                        -1,\n                        -1,\n                        1,\n                        1,\n                        1,\n                        1,\n                        -1\n                    ]), gl.STATIC_DRAW);\n                    const elemBuffer = gl.createBuffer();\n                    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elemBuffer);\n                    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array([\n                        0,\n                        1,\n                        2,\n                        0,\n                        2,\n                        3\n                    ]), gl.STATIC_DRAW);\n                    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n                    gl.enableVertexAttribArray(0);\n                    return ({\n                        \"SplashCursor.useEffect.blit\": function(target) {\n                            let doClear = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n                            if (!gl) return;\n                            if (!target) {\n                                gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n                                gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n                            } else {\n                                gl.viewport(0, 0, target.width, target.height);\n                                gl.bindFramebuffer(gl.FRAMEBUFFER, target.fbo);\n                            }\n                            if (doClear) {\n                                gl.clearColor(0, 0, 0, 1);\n                                gl.clear(gl.COLOR_BUFFER_BIT);\n                            }\n                            gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n                        }\n                    })[\"SplashCursor.useEffect.blit\"];\n                }\n            })[\"SplashCursor.useEffect.blit\"]();\n            let dye;\n            let velocity;\n            let divergence;\n            let curl;\n            let pressure;\n            const copyProgram = new Program(baseVertexShader, copyShader);\n            const clearProgram = new Program(baseVertexShader, clearShader);\n            const splatProgram = new Program(baseVertexShader, splatShader);\n            const advectionProgram = new Program(baseVertexShader, advectionShader);\n            const divergenceProgram = new Program(baseVertexShader, divergenceShader);\n            const curlProgram = new Program(baseVertexShader, curlShader);\n            const vorticityProgram = new Program(baseVertexShader, vorticityShader);\n            const pressureProgram = new Program(baseVertexShader, pressureShader);\n            const gradienSubtractProgram = new Program(baseVertexShader, gradientSubtractShader);\n            const displayMaterial = new Material(baseVertexShader, displayShaderSource);\n            function createFBO(w, h, internalFormat, format, type, param) {\n                gl.activeTexture(gl.TEXTURE0);\n                const texture = gl.createTexture();\n                gl.bindTexture(gl.TEXTURE_2D, texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, param);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, param);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, w, h, 0, format, type, null);\n                const fbo = gl.createFramebuffer();\n                gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n                gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n                gl.viewport(0, 0, w, h);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n                const texelSizeX = 1 / w;\n                const texelSizeY = 1 / h;\n                return {\n                    texture,\n                    fbo,\n                    width: w,\n                    height: h,\n                    texelSizeX,\n                    texelSizeY,\n                    attach (id) {\n                        gl.activeTexture(gl.TEXTURE0 + id);\n                        gl.bindTexture(gl.TEXTURE_2D, texture);\n                        return id;\n                    }\n                };\n            }\n            function createDoubleFBO(w, h, internalFormat, format, type, param) {\n                const fbo1 = createFBO(w, h, internalFormat, format, type, param);\n                const fbo2 = createFBO(w, h, internalFormat, format, type, param);\n                return {\n                    width: w,\n                    height: h,\n                    texelSizeX: fbo1.texelSizeX,\n                    texelSizeY: fbo1.texelSizeY,\n                    read: fbo1,\n                    write: fbo2,\n                    swap () {\n                        const tmp = this.read;\n                        this.read = this.write;\n                        this.write = tmp;\n                    }\n                };\n            }\n            function resizeFBO(target, w, h, internalFormat, format, type, param) {\n                const newFBO = createFBO(w, h, internalFormat, format, type, param);\n                copyProgram.bind();\n                if (copyProgram.uniforms.uTexture) gl.uniform1i(copyProgram.uniforms.uTexture, target.attach(0));\n                blit(newFBO, false);\n                return newFBO;\n            }\n            function resizeDoubleFBO(target, w, h, internalFormat, format, type, param) {\n                if (target.width === w && target.height === h) return target;\n                target.read = resizeFBO(target.read, w, h, internalFormat, format, type, param);\n                target.write = createFBO(w, h, internalFormat, format, type, param);\n                target.width = w;\n                target.height = h;\n                target.texelSizeX = 1 / w;\n                target.texelSizeY = 1 / h;\n                return target;\n            }\n            function initFramebuffers() {\n                const simRes = getResolution(config.SIM_RESOLUTION);\n                const dyeRes = getResolution(config.DYE_RESOLUTION);\n                const texType = ext.halfFloatTexType;\n                const rgba = ext.formatRGBA;\n                const rg = ext.formatRG;\n                const r = ext.formatR;\n                const filtering = ext.supportLinearFiltering ? gl.LINEAR : gl.NEAREST;\n                gl.disable(gl.BLEND);\n                if (!dye) {\n                    dye = createDoubleFBO(dyeRes.width, dyeRes.height, rgba.internalFormat, rgba.format, texType, filtering);\n                } else {\n                    dye = resizeDoubleFBO(dye, dyeRes.width, dyeRes.height, rgba.internalFormat, rgba.format, texType, filtering);\n                }\n                if (!velocity) {\n                    velocity = createDoubleFBO(simRes.width, simRes.height, rg.internalFormat, rg.format, texType, filtering);\n                } else {\n                    velocity = resizeDoubleFBO(velocity, simRes.width, simRes.height, rg.internalFormat, rg.format, texType, filtering);\n                }\n                divergence = createFBO(simRes.width, simRes.height, r.internalFormat, r.format, texType, gl.NEAREST);\n                curl = createFBO(simRes.width, simRes.height, r.internalFormat, r.format, texType, gl.NEAREST);\n                pressure = createDoubleFBO(simRes.width, simRes.height, r.internalFormat, r.format, texType, gl.NEAREST);\n            }\n            function updateKeywords() {\n                const displayKeywords = [];\n                if (config.SHADING) displayKeywords.push(\"SHADING\");\n                displayMaterial.setKeywords(displayKeywords);\n            }\n            function getResolution(resolution) {\n                const w = gl.drawingBufferWidth;\n                const h = gl.drawingBufferHeight;\n                const aspectRatio = w / h;\n                const aspect = aspectRatio < 1 ? 1 / aspectRatio : aspectRatio;\n                const min = Math.round(resolution);\n                const max = Math.round(resolution * aspect);\n                if (w > h) {\n                    return {\n                        width: max,\n                        height: min\n                    };\n                }\n                return {\n                    width: min,\n                    height: max\n                };\n            }\n            function scaleByPixelRatio(input) {\n                const pixelRatio = window.devicePixelRatio || 1;\n                return Math.floor(input * pixelRatio);\n            }\n            updateKeywords();\n            initFramebuffers();\n            let lastUpdateTime = Date.now();\n            let colorUpdateTimer = 0.0;\n            function updateFrame() {\n                const dt = calcDeltaTime();\n                if (resizeCanvas()) initFramebuffers();\n                updateColors(dt);\n                applyInputs();\n                step(dt);\n                render(null);\n                requestAnimationFrame(updateFrame);\n            }\n            function calcDeltaTime() {\n                const now = Date.now();\n                let dt = (now - lastUpdateTime) / 1000;\n                dt = Math.min(dt, 0.016666);\n                lastUpdateTime = now;\n                return dt;\n            }\n            function resizeCanvas() {\n                const width = scaleByPixelRatio(canvas.clientWidth);\n                const height = scaleByPixelRatio(canvas.clientHeight);\n                if (canvas.width !== width || canvas.height !== height) {\n                    canvas.width = width;\n                    canvas.height = height;\n                    return true;\n                }\n                return false;\n            }\n            function updateColors(dt) {\n                colorUpdateTimer += dt * config.COLOR_UPDATE_SPEED;\n                if (colorUpdateTimer >= 1) {\n                    colorUpdateTimer = wrap(colorUpdateTimer, 0, 1);\n                    pointers.forEach({\n                        \"SplashCursor.useEffect.updateColors\": (p)=>{\n                            p.color = generateColor();\n                        }\n                    }[\"SplashCursor.useEffect.updateColors\"]);\n                }\n            }\n            function applyInputs() {\n                for (const p of pointers){\n                    if (p.moved) {\n                        p.moved = false;\n                        splatPointer(p);\n                    }\n                }\n            }\n            function step(dt) {\n                gl.disable(gl.BLEND);\n                curlProgram.bind();\n                if (curlProgram.uniforms.texelSize) {\n                    gl.uniform2f(curlProgram.uniforms.texelSize, velocity.texelSizeX, velocity.texelSizeY);\n                }\n                if (curlProgram.uniforms.uVelocity) {\n                    gl.uniform1i(curlProgram.uniforms.uVelocity, velocity.read.attach(0));\n                }\n                blit(curl);\n                vorticityProgram.bind();\n                if (vorticityProgram.uniforms.texelSize) {\n                    gl.uniform2f(vorticityProgram.uniforms.texelSize, velocity.texelSizeX, velocity.texelSizeY);\n                }\n                if (vorticityProgram.uniforms.uVelocity) {\n                    gl.uniform1i(vorticityProgram.uniforms.uVelocity, velocity.read.attach(0));\n                }\n                if (vorticityProgram.uniforms.uCurl) {\n                    gl.uniform1i(vorticityProgram.uniforms.uCurl, curl.attach(1));\n                }\n                if (vorticityProgram.uniforms.curl) {\n                    gl.uniform1f(vorticityProgram.uniforms.curl, config.CURL);\n                }\n                if (vorticityProgram.uniforms.dt) {\n                    gl.uniform1f(vorticityProgram.uniforms.dt, dt);\n                }\n                blit(velocity.write);\n                velocity.swap();\n                divergenceProgram.bind();\n                if (divergenceProgram.uniforms.texelSize) {\n                    gl.uniform2f(divergenceProgram.uniforms.texelSize, velocity.texelSizeX, velocity.texelSizeY);\n                }\n                if (divergenceProgram.uniforms.uVelocity) {\n                    gl.uniform1i(divergenceProgram.uniforms.uVelocity, velocity.read.attach(0));\n                }\n                blit(divergence);\n                clearProgram.bind();\n                if (clearProgram.uniforms.uTexture) {\n                    gl.uniform1i(clearProgram.uniforms.uTexture, pressure.read.attach(0));\n                }\n                if (clearProgram.uniforms.value) {\n                    gl.uniform1f(clearProgram.uniforms.value, config.PRESSURE);\n                }\n                blit(pressure.write);\n                pressure.swap();\n                pressureProgram.bind();\n                if (pressureProgram.uniforms.texelSize) {\n                    gl.uniform2f(pressureProgram.uniforms.texelSize, velocity.texelSizeX, velocity.texelSizeY);\n                }\n                if (pressureProgram.uniforms.uDivergence) {\n                    gl.uniform1i(pressureProgram.uniforms.uDivergence, divergence.attach(0));\n                }\n                for(let i = 0; i < config.PRESSURE_ITERATIONS; i++){\n                    if (pressureProgram.uniforms.uPressure) {\n                        gl.uniform1i(pressureProgram.uniforms.uPressure, pressure.read.attach(1));\n                    }\n                    blit(pressure.write);\n                    pressure.swap();\n                }\n                gradienSubtractProgram.bind();\n                if (gradienSubtractProgram.uniforms.texelSize) {\n                    gl.uniform2f(gradienSubtractProgram.uniforms.texelSize, velocity.texelSizeX, velocity.texelSizeY);\n                }\n                if (gradienSubtractProgram.uniforms.uPressure) {\n                    gl.uniform1i(gradienSubtractProgram.uniforms.uPressure, pressure.read.attach(0));\n                }\n                if (gradienSubtractProgram.uniforms.uVelocity) {\n                    gl.uniform1i(gradienSubtractProgram.uniforms.uVelocity, velocity.read.attach(1));\n                }\n                blit(velocity.write);\n                velocity.swap();\n                advectionProgram.bind();\n                if (advectionProgram.uniforms.texelSize) {\n                    gl.uniform2f(advectionProgram.uniforms.texelSize, velocity.texelSizeX, velocity.texelSizeY);\n                }\n                if (!ext.supportLinearFiltering && advectionProgram.uniforms.dyeTexelSize) {\n                    gl.uniform2f(advectionProgram.uniforms.dyeTexelSize, velocity.texelSizeX, velocity.texelSizeY);\n                }\n                const velocityId = velocity.read.attach(0);\n                if (advectionProgram.uniforms.uVelocity) {\n                    gl.uniform1i(advectionProgram.uniforms.uVelocity, velocityId);\n                }\n                if (advectionProgram.uniforms.uSource) {\n                    gl.uniform1i(advectionProgram.uniforms.uSource, velocityId);\n                }\n                if (advectionProgram.uniforms.dt) {\n                    gl.uniform1f(advectionProgram.uniforms.dt, dt);\n                }\n                if (advectionProgram.uniforms.dissipation) {\n                    gl.uniform1f(advectionProgram.uniforms.dissipation, config.VELOCITY_DISSIPATION);\n                }\n                blit(velocity.write);\n                velocity.swap();\n                if (!ext.supportLinearFiltering && advectionProgram.uniforms.dyeTexelSize) {\n                    gl.uniform2f(advectionProgram.uniforms.dyeTexelSize, dye.texelSizeX, dye.texelSizeY);\n                }\n                if (advectionProgram.uniforms.uVelocity) {\n                    gl.uniform1i(advectionProgram.uniforms.uVelocity, velocity.read.attach(0));\n                }\n                if (advectionProgram.uniforms.uSource) {\n                    gl.uniform1i(advectionProgram.uniforms.uSource, dye.read.attach(1));\n                }\n                if (advectionProgram.uniforms.dissipation) {\n                    gl.uniform1f(advectionProgram.uniforms.dissipation, config.DENSITY_DISSIPATION);\n                }\n                blit(dye.write);\n                dye.swap();\n            }\n            function render(target) {\n                gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n                gl.enable(gl.BLEND);\n                drawDisplay(target);\n            }\n            function drawDisplay(target) {\n                const width = target ? target.width : gl.drawingBufferWidth;\n                const height = target ? target.height : gl.drawingBufferHeight;\n                displayMaterial.bind();\n                if (config.SHADING && displayMaterial.uniforms.texelSize) {\n                    gl.uniform2f(displayMaterial.uniforms.texelSize, 1 / width, 1 / height);\n                }\n                if (displayMaterial.uniforms.uTexture) {\n                    gl.uniform1i(displayMaterial.uniforms.uTexture, dye.read.attach(0));\n                }\n                blit(target, false);\n            }\n            function splatPointer(pointer) {\n                const dx = pointer.deltaX * config.SPLAT_FORCE;\n                const dy = pointer.deltaY * config.SPLAT_FORCE;\n                splat(pointer.texcoordX, pointer.texcoordY, dx, dy, pointer.color);\n            }\n            function clickSplat(pointer) {\n                const color = generateColor();\n                color.r *= 10;\n                color.g *= 10;\n                color.b *= 10;\n                const dx = 10 * (Math.random() - 0.5);\n                const dy = 30 * (Math.random() - 0.5);\n                splat(pointer.texcoordX, pointer.texcoordY, dx, dy, color);\n            }\n            function splat(x, y, dx, dy, color) {\n                splatProgram.bind();\n                if (splatProgram.uniforms.uTarget) {\n                    gl.uniform1i(splatProgram.uniforms.uTarget, velocity.read.attach(0));\n                }\n                if (splatProgram.uniforms.aspectRatio) {\n                    gl.uniform1f(splatProgram.uniforms.aspectRatio, canvas.width / canvas.height);\n                }\n                if (splatProgram.uniforms.point) {\n                    gl.uniform2f(splatProgram.uniforms.point, x, y);\n                }\n                if (splatProgram.uniforms.color) {\n                    gl.uniform3f(splatProgram.uniforms.color, dx, dy, 0);\n                }\n                if (splatProgram.uniforms.radius) {\n                    gl.uniform1f(splatProgram.uniforms.radius, correctRadius(config.SPLAT_RADIUS / 100));\n                }\n                blit(velocity.write);\n                velocity.swap();\n                if (splatProgram.uniforms.uTarget) {\n                    gl.uniform1i(splatProgram.uniforms.uTarget, dye.read.attach(0));\n                }\n                if (splatProgram.uniforms.color) {\n                    gl.uniform3f(splatProgram.uniforms.color, color.r, color.g, color.b);\n                }\n                blit(dye.write);\n                dye.swap();\n            }\n            function correctRadius(radius) {\n                const aspectRatio = canvas.width / canvas.height;\n                if (aspectRatio > 1) radius *= aspectRatio;\n                return radius;\n            }\n            function updatePointerDownData(pointer, id, posX, posY) {\n                pointer.id = id;\n                pointer.down = true;\n                pointer.moved = false;\n                pointer.texcoordX = posX / canvas.width;\n                pointer.texcoordY = 1 - posY / canvas.height;\n                pointer.prevTexcoordX = pointer.texcoordX;\n                pointer.prevTexcoordY = pointer.texcoordY;\n                pointer.deltaX = 0;\n                pointer.deltaY = 0;\n                pointer.color = generateColor();\n            }\n            function updatePointerMoveData(pointer, posX, posY, color) {\n                pointer.prevTexcoordX = pointer.texcoordX;\n                pointer.prevTexcoordY = pointer.texcoordY;\n                pointer.texcoordX = posX / canvas.width;\n                pointer.texcoordY = 1 - posY / canvas.height;\n                pointer.deltaX = correctDeltaX(pointer.texcoordX - pointer.prevTexcoordX);\n                pointer.deltaY = correctDeltaY(pointer.texcoordY - pointer.prevTexcoordY);\n                pointer.moved = Math.abs(pointer.deltaX) > 0 || Math.abs(pointer.deltaY) > 0;\n                pointer.color = color;\n            }\n            function updatePointerUpData(pointer) {\n                pointer.down = false;\n            }\n            function correctDeltaX(delta) {\n                const aspectRatio = canvas.width / canvas.height;\n                if (aspectRatio < 1) delta *= aspectRatio;\n                return delta;\n            }\n            function correctDeltaY(delta) {\n                const aspectRatio = canvas.width / canvas.height;\n                if (aspectRatio > 1) delta /= aspectRatio;\n                return delta;\n            }\n            function generateColor() {\n                const c = HSVtoRGB(Math.random(), 1.0, 1.0);\n                c.r *= 0.15;\n                c.g *= 0.15;\n                c.b *= 0.15;\n                return c;\n            }\n            function HSVtoRGB(h, s, v) {\n                let r = 0, g = 0, b = 0;\n                const i = Math.floor(h * 6);\n                const f = h * 6 - i;\n                const p = v * (1 - s);\n                const q = v * (1 - f * s);\n                const t = v * (1 - (1 - f) * s);\n                switch(i % 6){\n                    case 0:\n                        r = v;\n                        g = t;\n                        b = p;\n                        break;\n                    case 1:\n                        r = q;\n                        g = v;\n                        b = p;\n                        break;\n                    case 2:\n                        r = p;\n                        g = v;\n                        b = t;\n                        break;\n                    case 3:\n                        r = p;\n                        g = q;\n                        b = v;\n                        break;\n                    case 4:\n                        r = t;\n                        g = p;\n                        b = v;\n                        break;\n                    case 5:\n                        r = v;\n                        g = p;\n                        b = q;\n                        break;\n                }\n                return {\n                    r,\n                    g,\n                    b\n                };\n            }\n            function wrap(value, min, max) {\n                const range = max - min;\n                if (range === 0) return min;\n                return (value - min) % range + min;\n            }\n            window.addEventListener(\"mousedown\", {\n                \"SplashCursor.useEffect\": (e)=>{\n                    const pointer = pointers[0];\n                    const posX = scaleByPixelRatio(e.clientX);\n                    const posY = scaleByPixelRatio(e.clientY);\n                    updatePointerDownData(pointer, -1, posX, posY);\n                    clickSplat(pointer);\n                }\n            }[\"SplashCursor.useEffect\"]);\n            function handleFirstMouseMove(e) {\n                const pointer = pointers[0];\n                const posX = scaleByPixelRatio(e.clientX);\n                const posY = scaleByPixelRatio(e.clientY);\n                const color = generateColor();\n                updateFrame();\n                updatePointerMoveData(pointer, posX, posY, color);\n                document.body.removeEventListener(\"mousemove\", handleFirstMouseMove);\n            }\n            document.body.addEventListener(\"mousemove\", handleFirstMouseMove);\n            window.addEventListener(\"mousemove\", {\n                \"SplashCursor.useEffect\": (e)=>{\n                    const pointer = pointers[0];\n                    const posX = scaleByPixelRatio(e.clientX);\n                    const posY = scaleByPixelRatio(e.clientY);\n                    const color = pointer.color;\n                    updatePointerMoveData(pointer, posX, posY, color);\n                }\n            }[\"SplashCursor.useEffect\"]);\n            function handleFirstTouchStart(e) {\n                const touches = e.targetTouches;\n                const pointer = pointers[0];\n                for(let i = 0; i < touches.length; i++){\n                    const posX = scaleByPixelRatio(touches[i].clientX);\n                    const posY = scaleByPixelRatio(touches[i].clientY);\n                    updateFrame();\n                    updatePointerDownData(pointer, touches[i].identifier, posX, posY);\n                }\n                document.body.removeEventListener(\"touchstart\", handleFirstTouchStart);\n            }\n            document.body.addEventListener(\"touchstart\", handleFirstTouchStart);\n            window.addEventListener(\"touchstart\", {\n                \"SplashCursor.useEffect\": (e)=>{\n                    const touches = e.targetTouches;\n                    const pointer = pointers[0];\n                    for(let i = 0; i < touches.length; i++){\n                        const posX = scaleByPixelRatio(touches[i].clientX);\n                        const posY = scaleByPixelRatio(touches[i].clientY);\n                        updatePointerDownData(pointer, touches[i].identifier, posX, posY);\n                    }\n                }\n            }[\"SplashCursor.useEffect\"], false);\n            window.addEventListener(\"touchmove\", {\n                \"SplashCursor.useEffect\": (e)=>{\n                    const touches = e.targetTouches;\n                    const pointer = pointers[0];\n                    for(let i = 0; i < touches.length; i++){\n                        const posX = scaleByPixelRatio(touches[i].clientX);\n                        const posY = scaleByPixelRatio(touches[i].clientY);\n                        updatePointerMoveData(pointer, posX, posY, pointer.color);\n                    }\n                }\n            }[\"SplashCursor.useEffect\"], false);\n            window.addEventListener(\"touchend\", {\n                \"SplashCursor.useEffect\": (e)=>{\n                    const touches = e.changedTouches;\n                    const pointer = pointers[0];\n                    for(let i = 0; i < touches.length; i++){\n                        updatePointerUpData(pointer);\n                    }\n                }\n            }[\"SplashCursor.useEffect\"]);\n        }\n    }[\"SplashCursor.useEffect\"], [\n        SIM_RESOLUTION,\n        DYE_RESOLUTION,\n        CAPTURE_RESOLUTION,\n        DENSITY_DISSIPATION,\n        VELOCITY_DISSIPATION,\n        PRESSURE,\n        PRESSURE_ITERATIONS,\n        CURL,\n        SPLAT_RADIUS,\n        SPLAT_FORCE,\n        SHADING,\n        COLOR_UPDATE_SPEED,\n        BACK_COLOR,\n        TRANSPARENT\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"fixed top-0 left-0 z-50 pointer-events-none w-full h-full\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n            ref: canvasRef,\n            id: \"fluid\",\n            className: \"w-screen h-screen block\"\n        }, void 0, false, {\n            fileName: \"/Users/cloudmenson/Desktop/Files/Programming/My portfolio website/designer-portfolio/src/shared/ui/splash-cursor/index.tsx\",\n            lineNumber: 1514,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/cloudmenson/Desktop/Files/Programming/My portfolio website/designer-portfolio/src/shared/ui/splash-cursor/index.tsx\",\n        lineNumber: 1513,\n        columnNumber: 5\n    }, this);\n}\n_s(SplashCursor, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = SplashCursor;\nvar _c;\n$RefreshReg$(_c, \"SplashCursor\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/shared/ui/splash-cursor/index.tsx\n"));

/***/ })

});